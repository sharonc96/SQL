1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT Customerid, Firstname, Lastname, Country FROM customers
WHERE country != 'USA';

2. Show only the Customers from Brazil.
SELECT * FROM customers
WHERE country = 'Brazil';

3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT Firstname, Lastname, InvoiceID, Invoicedate, Billingcountry FROM customers
JOIN invoices
ON invoices.customerid = customers.customerid
WHERE country = 'Brazil';

4. Show the Employees who are Sales Agents.
SELECT Firstname, Lastname, title FROM EMPLOYEES
WHERE title = 'Sales Support Agent';

5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry FROM INVOICES;

6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.Firstname, employees.Lastname, invoices.invoiceid
FROM employees
JOIN customers ON customers.supportrepid = employees.employeeid
JOIN invoices ON customers.CustomerId = invoices.customerid;

7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT c.firstname, c.lastname, c.country, e.firstname, e.lastname, i.total
FROM customers c 
JOIN employees e ON e.EmployeeId = c.supportrepid
JOIN invoices i ON i.customerid = c.customerid;

8. How many Invoices were there in 2009?
SELECT COUNT(*) FROM INVOICES
WHERE INVOICEDATE LIKE '2009%';

9. What are the total sales for 2009?
SELECT SUM(total)FROM INVOICES 
WHERE INVOICEDATE LIKE '2009%';

10. Write a query that includes the purchased track name with each invoice line ID.
SELECT t.name, i.invoicelineid FROM tracks t
JOIN invoice_items i 
ON i.TrackId = t.trackid;

11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT t.name as track, a.name as artist, i.invoicelineid FROM tracks t
JOIN invoice_items i ON i.TrackId = t.trackid
JOIN albums ON albums.albumid = t.albumid
JOIN artists a ON a.artistid = albums.artistid;

12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.name as track, a.title as album, m.name as media, g.name as genre
FROM tracks t 
JOIN albums a ON a.albumid = t.AlbumId
JOIN media_types m ON m.MediaTypeId = t.MediaTypeId
JOIN genres g ON g.GenreId = t.GenreId;

13. Show the total sales made by each sales agent.
SELECT e.firstname, e.lastname,
ROUND(SUM(I.Total), 2) as 'Total Sales' 
FROM employees e 
JOIN customers c ON c.SupportRepId = e.EmployeeId
JOIN Invoices i ON i.CustomerId = c.CustomerId
GROUP BY e.EmployeeId;

14. Which sales agent made the most dollars in sales in 2009?
SELECT e.firstname, e.lastname,
ROUND(SUM(I.Total), 2) as 'Total Sales' 
FROM employees e 
JOIN customers c ON c.SupportRepId = e.EmployeeId
JOIN Invoices i ON i.CustomerId = c.CustomerId
WHERE i.InvoiceDate LIKE '2009%'
AND e.title = 'Sales Support Agent'
GROUP BY e.EmployeeId
ORDER BY ROUND(SUM(I.Total), 2) desc LIMIT 1;

15. What were the total sales for each year? 
SELECT ROUND(SUM(total), 2) as Total,
CASE 
WHEN invoicedate LIKE '2009%' THEN '2009'
WHEN invoicedate LIKE '2010%' THEN '2010'
WHEN invoicedate LIKE '2011%' THEN '2011'
WHEN invoicedate LIKE '2012%' THEN '2012'
WHEN invoicedate LIKE '2013%' THEN '2013'
END AS YEAR
FROM invoices
GROUP BY Year;

16. Which Country had the biggest number of total sales?
SELECT c.country FROM customers c
JOIN invoices i ON i.customerid = c.CustomerId
GROUP BY c.country
ORDER BY ROUND(SUM(i.total),2) desc LIMIT 1;

17. Which playlists include the track Snowballed? Show the playlist id number in results. 
SELECT p.name, p.PlaylistId FROM tracks t
JOIN playlist_track pt ON pt.trackid = t.TrackId
JOIN playlists p ON p.PlaylistId = pt.PlaylistId
WHERE t.name = 'Snowballed';

18. What are the top 5 longest songs?
SELECT name from tracks 
ORDER BY milliseconds desc limit 5;

19. List all the employees and job titles in order of hire date from oldest to newest. 
SELECT firstname, lastname, title from employees
ORDER BY hiredate asc;

20. How many tracks total are in each genre? 
SELECT g.name as genre, COUNT(t.genreid) as total
FROM tracks t 
JOIN genres g 
ON g.GenreId = t.genreid
GROUP BY g.name;


